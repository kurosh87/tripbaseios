//
//  AIChatExampleViewModel.swift
//  AIKit (Generated by SwiftyLaunch 1.5.0)
//  https://docs.swiftylaun.ch/module/aikit/ai-chat-example
//

import FirebaseKit
import PhotosUI
import SharedKit
import SwiftUI

// The ViewModel for the AIChatExampleView
// The "glue" between code logic and the view.

class AIChatExampleViewModel: ObservableObject {

	/// Waiting for server response?
	@Published public private(set) var fetching: Bool = true

	@Published public private(set) var messages: [DB.AIChatMessage] = []

	/// Textfield for user input
	@Published public var newMessage: String = ""

	init() {
	}

	@MainActor
	func fetchAIChatMessagesFromDB(db: DB) async {
		withAnimation {
			fetching = true
		}
		var newMessages: [DB.AIChatMessage] = []
		newMessages = await db.fetchAIChatHistory()
		withAnimation {
			messages = newMessages
			fetching = false
		}
	}

	@MainActor
	func sendNewAIChatMessage(db: DB) async {
		let messageToSend = newMessage
		newMessage = ""  // set it to empty, but if a failure happens, we can restore it
		withAnimation {
			fetching = true
			// add an optimistic update
			messages.append(DB.AIChatMessage(isFromUser: true, messageContent: messageToSend))
		}

		let messagesAdditions = await db.sendNewAIChatMessage(text: messageToSend)

		if messagesAdditions.count == 2 {  // it should be two
			await MainActor.run {  // so we trigger from the main thread and ensure that the animation happens
				withAnimation {
					messages.append(messagesAdditions[1])  // first is the user message, the second is the AI response
				}
			}
		} else {
			//error happened, remove the optimistic update
			withAnimation {
				_ = messages.popLast()
				newMessage = messageToSend
			}
		}

		withAnimation {
			fetching = false
		}
	}

	@MainActor
	func deleteChatHistory(db: DB) async {
		withAnimation {
			fetching = true
		}
		let success = await db.deleteAIChatHistory()
		if success {
			await MainActor.run {
				withAnimation {
					messages = []
				}
			}
			showInAppNotification(
				.success,
				content: .init(title: "Operation Successful", message: "Successfully cleared chat history"))
		} else {
			showInAppNotification(
				.error, content: .init(title: "Server Error", message: "Error Deleting Chat Messages"))
		}
		withAnimation {
			fetching = false
		}
	}
}
